<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>To-Do App</title>
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Dancing+Script:wght@700&family=Raleway:wght@600&display=swap');
        
        body {
            font-family: 'Dancing Script', cursive;
            background: black;
            color: white;
            max-width: 700px;
            margin: auto;
            padding: 20px;
            text-align: center;
            transition: all 0.3s ease-in-out;
        }
        h1 {
            font-size: 48px;
        }
        ul {
            list-style-type: none;
            padding: 0;
        }
        li {
            display: flex;
            align-items: center;
            justify-content: space-between;
            margin: 10px 0;
            padding: 15px;
            border-radius: 12px;
            background: rgba(255, 255, 255, 0.3);
            transition: transform 0.3s, box-shadow 0.3s;
            box-shadow: 0px 4px 10px rgba(255, 255, 255, 0.1);
            font-size: 20px;
        }
        li:hover {
            transform: scale(1.05);
            box-shadow: 0px 6px 15px rgba(255, 255, 255, 0.2);
        }
        .completed {
            text-decoration: line-through;
            color: lightgray;
        }
        button {
            padding: 12px 18px;
            margin: 5px;
            border: none;
            border-radius: 10px;
            font-family: 'Raleway', sans-serif;
            font-size: 20px;
            cursor: pointer;
            transition: background 0.3s, transform 0.2s;
        }
        button:nth-child(2) { background: #3498db; }
        button:nth-child(3) { background: #2ecc71; }
        button:nth-child(4) { background: #f1c40f; }
        button:hover {
            transform: scale(1.1);
        }
        input[type="text"] {
            width: 70%;
            padding: 14px;
            border-radius: 10px;
            border: none;
            font-size: 20px;
            text-align: center;
        }
        .popup {
            display: none;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background: white;
            color: black;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0px 0px 15px rgba(255,255,255,0.3);
            text-align: center;
            font-family: 'Dancing Script', cursive;
            font-size: 22px;
        }
    </style>
</head>
<body>
    <h1>To-Do App</h1>
    <input type="text" id="taskInput" placeholder="Add a task">
    <button onclick="addTask()">Add</button>
    <br><br>
    <button onclick="setFilter('all')">All</button>
    <button onclick="setFilter('completed')">Completed</button>
    <button onclick="setFilter('pending')">Pending</button>
    <ul id="taskList"></ul>
    
    <div id="popup" class="popup">
        <p>Task added successfully!</p>
        <button onclick="closePopup()">OK</button>
    </div>
    
    <script>
        let tasks = [];
        let filter = "all";

        function addTask() {
            const taskInput = document.getElementById("taskInput");
            const taskText = taskInput.value.trim();
            if (taskText !== "") {
                tasks.push({ text: taskText, completed: false });
                taskInput.value = "";
                showPopup();
                renderTasks();
            }
        }

        function toggleTask(index) {
            tasks[index].completed = !tasks[index].completed;
            renderTasks();
        }

        function setFilter(newFilter) {
            filter = newFilter;
            renderTasks();
        }

        function renderTasks() {
            const taskList = document.getElementById("taskList");
            taskList.innerHTML = "";
            tasks.filter(task => {
                if (filter === "completed") return task.completed;
                if (filter === "pending") return !task.completed;
                return true;
            }).forEach((task, index) => {
                const li = document.createElement("li");
                li.innerHTML = `
                    <input type="checkbox" ${task.completed ? "checked" : ""} onclick="toggleTask(${index})">
                    <span class="${task.completed ? 'completed' : ''}">${task.text}</span>
                `;
                taskList.appendChild(li);
            });
        }

        function showPopup() {
            const popup = document.getElementById("popup");
            popup.style.display = "block";
            setTimeout(closePopup, 2000);
        }

        function closePopup() {
            document.getElementById("popup").style.display = "none";
        }
    </script>
</body>
</html>
